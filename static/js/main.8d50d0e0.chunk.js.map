{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","text","todo","Todos","setTodos","className","completed","onClick","map","item","id","filter","el","TodoList","Filter","TodoForm","setinputText","inputText","setStatus","onChange","e","currentTarget","value","type","placeholder","preventDefault","Math","floor","random","target","name","filtered","App","useState","Status","setFilter","useEffect","getLocal","filterHandler","saveLocal","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d50d0e0.chunk.js","sourcesContent":["\r\nconst Todo = ({text, todo, Todos, setTodos}) => {\r\n\r\n    const deleteHandler = () =>{\r\n        setTodos(Todos.filter(el => el.id !== todo.id))\r\n    };\r\n\r\n    \r\n\r\n    const completeHandler = () => {\r\n        setTodos(Todos.map((item)=> {\r\n            return item.id === todo.id ?\r\n            {...item, completed: !item.completed} : item;\r\n            \r\n        }))\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo\" >\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}` }>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n            <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\n//Import componenst\r\nimport Todo from './Todo';\r\n\r\n\r\nconst TodoList = ({Todos, setTodos, Filter}) =>{\r\n    \r\n    return(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n          {Filter.map(todo =>(\r\n              <Todo \r\n              setTodos={setTodos} \r\n              Todos={Todos}\r\n              key={todo.id}\r\n              todo={todo}\r\n              text={todo.text}/>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState} from \"react\";\r\n\r\nconst TodoForm = ({setinputText,Todos, setTodos, inputText, setStatus}) =>{\r\n    const inputTodoHandler = (e) => {\r\n        setinputText(e.currentTarget.value);\r\n    };\r\n    \r\n    const submitTodoHandler = (e) =>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...Todos,{\r\n                text: inputText,\r\n                completed: false,\r\n                id: Math.floor(Math.random() * 1000)\r\n            }\r\n        ]);\r\n        setinputText('');\r\n    };\r\n\r\n    const setatusHandler = (e) =>{\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const deleteAllHandler = () =>{\r\n        let filtered = Todos.filter(text =>{\r\n            return !text.completed;\r\n        });\r\n        setTodos(filtered);\r\n    }\r\n\r\n    return(\r\n    <form>\r\n        <input onChange={inputTodoHandler} value={inputText} type=\"text\" className=\"todo-input\" placeholder=\"Add todo here ...\" />\r\n        <button onClick={submitTodoHandler} className=\"form-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={setatusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n        <button onClick={deleteAllHandler} className=\"delete-all-btn\">\r\n            Delete All Complete Task\r\n        </button>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, {useState,useEffect} from 'react';\nimport './App.css';\n\n//component\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\n\nfunction App(){\n  //useState\n  const [inputText, setinputText] = useState('');\n  const [Todos, setTodos] = useState([]);\n  const [Status, setStatus] = useState('all');\n  const [Filter, setFilter] = useState([]);\n\n  //Functions\n  //function untuk memfilter status todo\n  const filterHandler = () =>{\n    switch(Status){\n      case 'completed':\n        setFilter(Todos.filter(todo => todo.completed === true))\n        break;\n        case 'uncompleted':\n        setFilter(Todos.filter(todo => todo.completed === false))\n        break;\n        default:\n          setFilter(Todos);\n          break;\n    }\n  };\n\n  useEffect(()=>{\n    getLocal();\n  },[]);\n\n  //useEffect\n   useEffect(()=> {\n    filterHandler();\n    saveLocal();\n  }, [Todos, Status]);\n\n  // Loval Store\n  const saveLocal = () =>{\n      localStorage.setItem('Todos', JSON.stringify(Todos));\n  };\n  \n  const getLocal = () =>{\n    if (localStorage.getItem('Todos') === null){\n      localStorage.setItem('Todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('Todos'))\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n\n      <TodoForm \n      inputText={inputText} \n      Todos={Todos} \n      setTodos={setTodos}\n      setinputText={setinputText}\n      setStatus={setStatus}\n      />\n      \n    \n\n      <TodoList \n      Todos={Todos}\n      setTodos={setTodos}\n      Filter={Filter}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}